{"ast":null,"code":"var _jsxFileName = \"E:\\\\AlumniSocialNetwork\\\\alumniweb\\\\src\\\\components\\\\CommentList.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { Button, Image, Spinner } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CommentList = ({\n  postId,\n  comments\n}) => {\n  _s();\n  const [expandedComments, setExpandedComments] = useState({});\n  const [loadingReplies, setLoadingReplies] = useState({});\n  const [repliesData, setRepliesData] = useState({}); // { parentId: [reply1, reply2, ...] }\n\n  const toggleReplies = async commentId => {\n    const alreadyExpanded = expandedComments[commentId];\n\n    // Nếu đã hiện rồi => ẩn đi\n    if (alreadyExpanded) {\n      setExpandedComments(prev => ({\n        ...prev,\n        [commentId]: false\n      }));\n      return;\n    }\n\n    // Nếu chưa có replies thì gọi API\n    if (!repliesData[commentId]) {\n      try {\n        setLoadingReplies(prev => ({\n          ...prev,\n          [commentId]: true\n        }));\n        const res = await axios.get(`/comments/replies/${commentId}`);\n        setRepliesData(prev => ({\n          ...prev,\n          [commentId]: res.data\n        }));\n      } catch (err) {\n        console.error(\"Lỗi tải replies:\", err);\n      } finally {\n        setLoadingReplies(prev => ({\n          ...prev,\n          [commentId]: false\n        }));\n      }\n    }\n\n    // Mở replies\n    setExpandedComments(prev => ({\n      ...prev,\n      [commentId]: true\n    }));\n  };\n  const renderReplies = comment => {\n    const replies = expandedComments[comment.id] ? repliesData[comment.id] || [] : [];\n    if (!expandedComments[comment.id]) {\n      var _comment$replies;\n      return /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"link\",\n        size: \"sm\",\n        className: \"ps-5\",\n        onClick: () => toggleReplies(comment.id),\n        children: loadingReplies[comment.id] ? /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          size: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Xem t\\u1EA5t c\\u1EA3 \", ((_comment$replies = comment.replies) === null || _comment$replies === void 0 ? void 0 : _comment$replies.length) || 0, \" ph\\u1EA3n h\\u1ED3i\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    }\n    return replies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex ps-5 pt-2\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: reply.user.avatar,\n        roundedCircle: true,\n        width: 30,\n        height: 30,\n        className: \"me-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: reply.user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: reply.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-muted\",\n          style: {\n            fontSize: \"0.75rem\"\n          },\n          children: new Date(reply.createdDate).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, reply.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pt-3\",\n    children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex pt-2\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: comment.user.avatar,\n        roundedCircle: true,\n        width: 35,\n        height: 35,\n        className: \"me-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: comment.user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-muted\",\n          style: {\n            fontSize: \"0.75rem\"\n          },\n          children: new Date(comment.createdDate).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), renderReplies(comment)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentList, \"8Oga2H9lV+FvW8b57XAd24JpjZQ=\");\n_c = CommentList;\nexport default CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["useState","axios","Button","Image","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentList","postId","comments","_s","expandedComments","setExpandedComments","loadingReplies","setLoadingReplies","repliesData","setRepliesData","toggleReplies","commentId","alreadyExpanded","prev","res","get","data","err","console","error","renderReplies","comment","replies","id","_comment$replies","variant","size","className","onClick","children","animation","fileName","_jsxFileName","lineNumber","columnNumber","length","map","reply","src","user","avatar","roundedCircle","width","height","name","content","style","fontSize","Date","createdDate","toLocaleString","_c","$RefreshReg$"],"sources":["E:/AlumniSocialNetwork/alumniweb/src/components/CommentList.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Image, Spinner } from \"react-bootstrap\";\r\n\r\nconst CommentList = ({ postId, comments }) => {\r\n  const [expandedComments, setExpandedComments] = useState({});\r\n  const [loadingReplies, setLoadingReplies] = useState({});\r\n  const [repliesData, setRepliesData] = useState({}); // { parentId: [reply1, reply2, ...] }\r\n\r\n  const toggleReplies = async (commentId) => {\r\n    const alreadyExpanded = expandedComments[commentId];\r\n\r\n    // Nếu đã hiện rồi => ẩn đi\r\n    if (alreadyExpanded) {\r\n      setExpandedComments(prev => ({ ...prev, [commentId]: false }));\r\n      return;\r\n    }\r\n\r\n    // Nếu chưa có replies thì gọi API\r\n    if (!repliesData[commentId]) {\r\n      try {\r\n        setLoadingReplies(prev => ({ ...prev, [commentId]: true }));\r\n        const res = await axios.get(`/comments/replies/${commentId}`);\r\n        setRepliesData(prev => ({ ...prev, [commentId]: res.data }));\r\n      } catch (err) {\r\n        console.error(\"Lỗi tải replies:\", err);\r\n      } finally {\r\n        setLoadingReplies(prev => ({ ...prev, [commentId]: false }));\r\n      }\r\n    }\r\n\r\n    // Mở replies\r\n    setExpandedComments(prev => ({ ...prev, [commentId]: true }));\r\n  };\r\n\r\n  const renderReplies = (comment) => {\r\n    const replies = expandedComments[comment.id]\r\n      ? repliesData[comment.id] || []\r\n      : [];\r\n\r\n    if (!expandedComments[comment.id]) {\r\n      return (\r\n        <Button\r\n          variant=\"link\"\r\n          size=\"sm\"\r\n          className=\"ps-5\"\r\n          onClick={() => toggleReplies(comment.id)}\r\n        >\r\n          {loadingReplies[comment.id] ? (\r\n            <Spinner animation=\"border\" size=\"sm\" />\r\n          ) : (\r\n            <>Xem tất cả {comment.replies?.length || 0} phản hồi</>\r\n          )}\r\n        </Button>\r\n      );\r\n    }\r\n\r\n    return replies.map(reply => (\r\n      <div key={reply.id} className=\"d-flex ps-5 pt-2\">\r\n        <Image\r\n          src={reply.user.avatar}\r\n          roundedCircle\r\n          width={30}\r\n          height={30}\r\n          className=\"me-2\"\r\n        />\r\n        <div>\r\n          <strong>{reply.user.name}</strong>\r\n          <div>{reply.content}</div>\r\n          <div className=\"text-muted\" style={{ fontSize: \"0.75rem\" }}>\r\n            {new Date(reply.createdDate).toLocaleString()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"pt-3\">\r\n      {comments.map(comment => (\r\n        <div key={comment.id} className=\"d-flex pt-2\">\r\n          <Image\r\n            src={comment.user.avatar}\r\n            roundedCircle\r\n            width={35}\r\n            height={35}\r\n            className=\"me-2\"\r\n          />\r\n          <div>\r\n            <strong>{comment.user.name}</strong>\r\n            <div>{comment.content}</div>\r\n            <div className=\"text-muted\" style={{ fontSize: \"0.75rem\" }}>\r\n              {new Date(comment.createdDate).toLocaleString()}\r\n            </div>\r\n            {/* Replies lazy load */}\r\n            {renderReplies(comment)}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}