{"ast":null,"code":"// src/configs/Apis.js\nimport axios from \"axios\";\n\n// ✅ Base URL của backend\nconst BASE_URL = \"http://localhost:8080/AlumniSocialNetwork/api\";\n\n// ✅ Tạo Axios instance\nconst apiClient = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n    // Authorization: `Bearer ${token}` nếu cần auth\n  }\n});\n\n// ✅ Endpoint\nconst endpoints = {\n  posts: \"/post\",\n  comments: \"/comment\",\n  reactions: \"/reaction\"\n};\n\n// ✅ API chính\nconst Apis = {\n  // ------------------ 📌 POST ------------------\n  getAllPosts: () => apiClient.get(endpoints.posts),\n  getPostById: id => apiClient.get(`${endpoints.posts}/${id}`),\n  createPost: data => apiClient.post(endpoints.posts, data),\n  updatePost: (id, data) => apiClient.put(`${endpoints.posts}/${id}`, data),\n  deletePost: id => apiClient.delete(`${endpoints.posts}/${id}`),\n  // ✅ Lock hoặc mở bình luận\n  toggleLockComments: (postId, lock) => apiClient.post(`${endpoints.posts}/${postId}/lock-comments?lock=${lock}`),\n  // ------------------ 💬 COMMENT ------------------\n  getCommentsByPostId: postId => apiClient.get(`${endpoints.comments}/post/${postId}`),\n  createComment: data => apiClient.post(endpoints.comments, data),\n  updateComment: (id, data) => apiClient.put(`${endpoints.comments}/${id}`, data),\n  deleteComment: id => apiClient.delete(`${endpoints.comments}/${id}`),\n  // ------------------ ❤️ REACTION ------------------\n  reactToPost: reaction => apiClient.post(endpoints.reactions, reaction),\n  getReactionStatsByPostId: postId => apiClient.get(`${endpoints.reactions}/stats/${postId}`),\n  getUserReactionForPost: (userId, postId) => apiClient.get(`${endpoints.reactions}/user/${userId}/post/${postId}`)\n};\nexport default Apis;","map":{"version":3,"names":["axios","BASE_URL","apiClient","create","baseURL","headers","endpoints","posts","comments","reactions","Apis","getAllPosts","get","getPostById","id","createPost","data","post","updatePost","put","deletePost","delete","toggleLockComments","postId","lock","getCommentsByPostId","createComment","updateComment","deleteComment","reactToPost","reaction","getReactionStatsByPostId","getUserReactionForPost","userId"],"sources":["E:/AlumniSocialNetwork/alumniweb/src/configs/Apis.js"],"sourcesContent":["// src/configs/Apis.js\r\nimport axios from \"axios\";\r\n\r\n// ✅ Base URL của backend\r\nconst BASE_URL = \"http://localhost:8080/AlumniSocialNetwork/api\";\r\n\r\n// ✅ Tạo Axios instance\r\nconst apiClient = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    // Authorization: `Bearer ${token}` nếu cần auth\r\n  },\r\n});\r\n\r\n// ✅ Endpoint\r\nconst endpoints = {\r\n  posts: \"/post\",\r\n  comments: \"/comment\",\r\n  reactions: \"/reaction\",\r\n};\r\n\r\n// ✅ API chính\r\nconst Apis = {\r\n  // ------------------ 📌 POST ------------------\r\n  getAllPosts: () => apiClient.get(endpoints.posts),\r\n  getPostById: (id) => apiClient.get(`${endpoints.posts}/${id}`),\r\n  createPost: (data) => apiClient.post(endpoints.posts, data),\r\n  updatePost: (id, data) => apiClient.put(`${endpoints.posts}/${id}`, data),\r\n  deletePost: (id) => apiClient.delete(`${endpoints.posts}/${id}`),\r\n\r\n  // ✅ Lock hoặc mở bình luận\r\n  toggleLockComments: (postId, lock) =>\r\n    apiClient.post(`${endpoints.posts}/${postId}/lock-comments?lock=${lock}`),\r\n\r\n  // ------------------ 💬 COMMENT ------------------\r\n  getCommentsByPostId: (postId) =>\r\n    apiClient.get(`${endpoints.comments}/post/${postId}`),\r\n  createComment: (data) => apiClient.post(endpoints.comments, data),\r\n  updateComment: (id, data) =>\r\n    apiClient.put(`${endpoints.comments}/${id}`, data),\r\n  deleteComment: (id) => apiClient.delete(`${endpoints.comments}/${id}`),\r\n\r\n  // ------------------ ❤️ REACTION ------------------\r\n  reactToPost: (reaction) => apiClient.post(endpoints.reactions, reaction),\r\n\r\n  getReactionStatsByPostId: (postId) =>\r\n    apiClient.get(`${endpoints.reactions}/stats/${postId}`),\r\n\r\n  getUserReactionForPost: (userId, postId) =>\r\n    apiClient.get(`${endpoints.reactions}/user/${userId}/post/${postId}`),\r\n};\r\n\r\nexport default Apis;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAG,+CAA+C;;AAEhE;AACA,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC7BC,OAAO,EAAEH,QAAQ;EACjBI,OAAO,EAAE;IACP,cAAc,EAAE;IAChB;EACF;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,SAAS,GAAG;EAChBC,KAAK,EAAE,OAAO;EACdC,QAAQ,EAAE,UAAU;EACpBC,SAAS,EAAE;AACb,CAAC;;AAED;AACA,MAAMC,IAAI,GAAG;EACX;EACAC,WAAW,EAAEA,CAAA,KAAMT,SAAS,CAACU,GAAG,CAACN,SAAS,CAACC,KAAK,CAAC;EACjDM,WAAW,EAAGC,EAAE,IAAKZ,SAAS,CAACU,GAAG,CAAC,GAAGN,SAAS,CAACC,KAAK,IAAIO,EAAE,EAAE,CAAC;EAC9DC,UAAU,EAAGC,IAAI,IAAKd,SAAS,CAACe,IAAI,CAACX,SAAS,CAACC,KAAK,EAAES,IAAI,CAAC;EAC3DE,UAAU,EAAEA,CAACJ,EAAE,EAAEE,IAAI,KAAKd,SAAS,CAACiB,GAAG,CAAC,GAAGb,SAAS,CAACC,KAAK,IAAIO,EAAE,EAAE,EAAEE,IAAI,CAAC;EACzEI,UAAU,EAAGN,EAAE,IAAKZ,SAAS,CAACmB,MAAM,CAAC,GAAGf,SAAS,CAACC,KAAK,IAAIO,EAAE,EAAE,CAAC;EAEhE;EACAQ,kBAAkB,EAAEA,CAACC,MAAM,EAAEC,IAAI,KAC/BtB,SAAS,CAACe,IAAI,CAAC,GAAGX,SAAS,CAACC,KAAK,IAAIgB,MAAM,uBAAuBC,IAAI,EAAE,CAAC;EAE3E;EACAC,mBAAmB,EAAGF,MAAM,IAC1BrB,SAAS,CAACU,GAAG,CAAC,GAAGN,SAAS,CAACE,QAAQ,SAASe,MAAM,EAAE,CAAC;EACvDG,aAAa,EAAGV,IAAI,IAAKd,SAAS,CAACe,IAAI,CAACX,SAAS,CAACE,QAAQ,EAAEQ,IAAI,CAAC;EACjEW,aAAa,EAAEA,CAACb,EAAE,EAAEE,IAAI,KACtBd,SAAS,CAACiB,GAAG,CAAC,GAAGb,SAAS,CAACE,QAAQ,IAAIM,EAAE,EAAE,EAAEE,IAAI,CAAC;EACpDY,aAAa,EAAGd,EAAE,IAAKZ,SAAS,CAACmB,MAAM,CAAC,GAAGf,SAAS,CAACE,QAAQ,IAAIM,EAAE,EAAE,CAAC;EAEtE;EACAe,WAAW,EAAGC,QAAQ,IAAK5B,SAAS,CAACe,IAAI,CAACX,SAAS,CAACG,SAAS,EAAEqB,QAAQ,CAAC;EAExEC,wBAAwB,EAAGR,MAAM,IAC/BrB,SAAS,CAACU,GAAG,CAAC,GAAGN,SAAS,CAACG,SAAS,UAAUc,MAAM,EAAE,CAAC;EAEzDS,sBAAsB,EAAEA,CAACC,MAAM,EAAEV,MAAM,KACrCrB,SAAS,CAACU,GAAG,CAAC,GAAGN,SAAS,CAACG,SAAS,SAASwB,MAAM,SAASV,MAAM,EAAE;AACxE,CAAC;AAED,eAAeb,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}